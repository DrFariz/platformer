name: Export Godot 3.x Project

on:
  workflow_dispatch:
    inputs:
      godot_link:
        required: true
        default: "https://github.com/godotengine/godot/releases/download/3.6-stable/Godot_v3.6-stable_linux_headless.64.zip"
        description: "Enter Godot link:"
      templates_link:
        required: true
        default: "https://github.com/godotengine/godot/releases/download/3.6-stable/Godot_v3.6-stable_export_templates.tpz"
        description: "Enter Export Templates link:"
      platform:
        required: true
        default: "Android"
        description: "Enter platform:"
        type: choice
        options:
          - "Android"
          - "iOS"
          - "HTML5"
          - "Mac OSX"
          - "UWP"
          - "WindowsDesktop"
          - "Linux/X11"
          - "All"
      debug:
        required: true
        description: "Debug version"
        type: boolean
      user:
        description: "Enter user (Only for Android):"
      keypass:
        description: "Enter keypass (min 6 char, no spaces, must include letters, and numbers. Only for Android):"
        pattern: '^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d@$!%*?&]{6,}$'
        
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GODOT_LINK: ${{ inputs.godot_link }}
      TEMPLATES_LINK: ${{ inputs.templates_link }}
      PLATFORM: ${{ inputs.platform }}
      KEYPASS: ${{ inputs.keypass }}
      USER: ${{ inputs.user }}
      DEBUG: ${{ inputs.debug }}
 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: ⚙️ Preapare
      run: |
        mkdir -p export
        if [ ! -f export_presets.cfg ]; then
          echo "Error: File export_presets.cfg not found."
          exit 1
        fi
        if [ $PLATFORM = "All" ] || [ $PLATFORM = "Android" ]; then
          ISANDROID=$(awk -F= '/^\[preset\.[0-9]+\]/{found=1}
            found && /platform/ && $2 ~ /Android/ {print "ISANDROID=true"}' export_presets.cfg)
          echo "$ISANDROID" >> $GITHUB_ENV
        fi

    - name: Cache Godot & Export Templates
      uses: actions/cache@v4
      id: cache
      with:
        path: |
          ~/godot.zip
          ~/godot-templates.tpz
        key: ${{ runner.os }}-godot-and-export-templates
        restore-keys: ${{ runner.os }}-

    - name: Download Godot & Export Templates
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        wget $GODOT_LINK -O godot.zip
        curl -L $TEMPLATES_LINK -o godot-templates.tpz

    - name: Extract Godot Export Templates
      run: |
        unzip godot.zip
        sudo mv Godot_* /usr/local/bin/godot
        chmod +x /usr/local/bin/godot
        GVERS=$(godot --version)
        VERSION=$(echo $GVERS | awk -F. '{print $1 "." $2 "." $3}')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        mkdir -p ~/.local/share/godot/templates/${{ env.VERSION }}
        unzip godot-templates.tpz -d ~/godot-templates
        mv ~/godot-templates/templates/* ~/.local/share/godot/templates/${{ env.VERSION }}/
        rm -rf ~/godot-templates

    - name: Set up JDK (Only for Android)
      if: ${{ env.ISANDROID == 'true' }}
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Set up Android SDK (Only for Android)
      if: ${{ env.ISANDROID == 'true' }}
      uses: android-actions/setup-android@v3

    - name: Generate Keystore (Only for Android)
      if: ${{ env.ISANDROID == 'true' }}
      run: |
        keytool -genkey -v -keystore debug.keystore -alias ${{ env.USER }} -keyalg RSA -keysize 2048 -validity 10000 -storepass ${{ env.KEYPASS }} -keypass ${{ env.KEYPASS }} -dname "CN=Android Export,O=Android,C=US"
        keytool -genkey -v -keystore release.keystore -alias ${{ env.USER }} -keyalg RSA -keysize 2048 -validity 10000 -storepass ${{ env.KEYPASS }} -dname "CN=Android Export,O=Android,C=US"

    - name: Export
      run: |
        if [ $PLATFORM = "All" ]; then
          awk -v debug=${{ env.DEBUG }} -F= '/^\[preset\.[0-9]+\]/{found=1}
          found && /name/ {
            if(debug == "true")
              system("godot --export-debug \" $2 "\"");
            else
              system("godot --export \"" $2 "\"");
            found=0
          }' export_presets.cfg
        else
          if [ ${{ env.DEBUG }} = "true" ]; then
            godot --export-debug "$PLATFORM"
          else
            godot --export "$PLATFORM"
          fi
        fi

    - name: Upload result to artifact
      uses: actions/upload-artifact@v4
      with:
        name: Result
        path: export/